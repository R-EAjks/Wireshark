commit f27e6c041c
Author: Guy Harris <gharris@sonic.net>
Date:   Tue Jun 1 18:59:29 2021 -0700

    pcapng: set the length of the options item.
    
    It runs up to either the end of the option data or the terminating
    end-of-options option (readers MUST handle lists of options that
    contains an end-of-options option and lists of options that don't).
    
    
    (cherry picked from commit 2f5c0ffdb26d753943201029ff65e237c1a9776b)

commit 48fda769c9
Author: Guy Harris <gharris@sonic.net>
Date:   Mon May 31 02:44:57 2021 -0700

    ascend: set rec->rec_type.
    
    REC_TYPE_PACKET is 0, so if it's been initialized to 0, and never gets
    overwritten, this fixes code withotu fixing a visible bug, but it should
    be done anyway.
    
    (backported from commit 162251176ae206430b81bd8b467bc22c6c7bcd8b)

commit e786b6cbc7
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun May 30 18:03:22 2021 +0000

    [Automatic update for 2021-05-30]
    
    Update manuf, services enterprise numbers, translations, and other items.

commit 004f6cceed
Author: Gerald Combs <gerald@wireshark.org>
Date:   Fri May 28 16:09:14 2021 -0700

    Prep for 3.2.14

commit 47395bb520
Author: Jo√£o Valverde <joao.valverde@tecnico.ulisboa.pt>
Date:   Wed May 26 04:17:59 2021 +0100

    dfilter: Fix handling of escaped quotes in macros
    
    We can't unescape characters when expanding a display filter macro.
    The escaping must be preserved until the expression is evaluated in
    the display filter engine, otherwise it will likely generate a syntax
    error in the parser.
    
    In the macro body we allow '$' (or any other char) to be escaped
    with backslash (preserving the backslash).
    
    Fixes #17160.
    
    
    (cherry picked from commit 1dba58789d7fbf6952d631774c94f63e2179d4d1)

commit 89131eeb1b
Author: John Thacker <johnthacker@gmail.com>
Date:   Mon Apr 5 09:03:36 2021 -0400

    ftype-protocol: Fix crash when comparing _ws.expert to literals
    
    The ftype-protocol has two components to its value - a tvb, which is
    allowed to be be NULL (most notably in _ws.expert), and a string
    description. They can also be created from string literals, such as
    in display filters. It's possible to compare protocols with a NULL
    tvb with protocol terms created from literals, e.g. entering the
    display filter "_ws_expert < 1".
    
    Partially revert 69e2603c48d04a675785d9e7bad162ebb9a83b07 so that
    this doesn't crash, by assigning proto_string to the empty string
    instead of null when creating from a literal. Fixes #17316
    
    
    (cherry picked from commit 31297dbb82da0b3adf5c257398638d9b4da94931)

commit 22cd3ef87b
Author: Gerald Combs <gerald@wireshark.org>
Date:   Mon May 24 13:45:31 2021 -0700

    GitLab CI: Enable ccache for fuzz builds.
    
    Enable ccache for our fuzz builds. Add sections as described at
    https://docs.gitlab.com/ee/ci/jobs/#expand-and-collapse-job-log-sections
    for the CMake step as well.
    
    
    (cherry picked from commit 02f4dcb0ad13fd3b671c212aec739be96ca2dc41)

commit 5c7584430a
Author: Guy Harris <gharris@sonic.net>
Date:   Sun May 23 23:14:27 2021 -0700

    k12: plug a memory leak.
    
    If the two putative number-of-records values don't match (meaning one of
    them is presumably the number of records and the other one isn't - we
    don't know which is the case), free up the private data structure we
    allocated before returning an error.
    
    
    (cherry picked from commit 7f6c5d0137c94bdc9f7b07ee249d1b3cc9396dd9)

commit 4cc654d4f9
Author: Guy Harris <gharris@sonic.net>
Date:   Sun May 23 19:37:09 2021 -0700

    erf: set USERAPPL if we have the application version but not the name.
    
    Just say "(Unknown application) <version>".
    
    This also means that we don't leak the app_version string if there's no
    app_name string.
    
    
    (cherry picked from commit 297b6c5407426aa33b197f0f5d280ce4c6c04dc3)

commit bbe7d3a328
Author: Guy Harris <gharris@sonic.net>
Date:   Sun May 23 17:56:18 2021 -0700

    netscaler: plug a memory leak.
    
    Free the read buffer if the first read fails.
    
    
    (cherry picked from commit 976ccc9a00d5abd4f1e1a6041378f8cb1292b27e)

commit 676f706a53
Author: Guy Harris <gharris@sonic.net>
Date:   Sun May 23 17:04:59 2021 -0700

    tacacs: free a buffer if it's not used.
    
    Plugs a leak.
    
    
    (cherry picked from commit 1bb64b7e0ca46442b3f3a65e4b99893674b3c287)

commit d65ce8b5e1
Author: Guy Harris <gharris@sonic.net>
Date:   Sun May 23 13:55:48 2021 -0700

    dnp: plug a memory leak.
    
    If we're throwing away the data, *throw away the data* - free it, as
    we're not using it as the backing data for a tvbuff.
    
    
    (cherry picked from commit 618661b22e34a59b21117db723d8ff91e064d4ba)

commit bee4485a36
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun May 23 10:19:10 2021 +0000

    [Automatic update for 2021-05-23]
    
    Update manuf, services enterprise numbers, translations, and other items.

commit bad09320ba
Author: Guy Harris <gharris@sonic.net>
Date:   Sun May 23 01:27:11 2021 -0700

    OID handling: fix a memory leak.
    
    There's a "break" in some code that appears to be copied and pasted from
    a switch statement; the break would exit the loop (and leak memory
    allocated within the loop), which does not appear to be the intent, so
    it may have been copied over incorrectly.  Remove it.
    
    While we're at it, redo the "constant-time append to the end of a loop"
    code to be a bit clearer, both to humans reading the code and code
    analyzers reading the code.
    
    
    (cherry picked from commit c73ab16bef0c97dd67f03fdfa7063958d1712d8b)

commit 4d99fba5d5
Author: Guy Harris <gharris@sonic.net>
Date:   Sun May 23 00:03:01 2021 -0700

    epl-profile-parser: plug a memory leak.
    
    g_key_file_get_groups() returns a pointer to g_mallocated data; we need
    to pass its return value to g_strfreev() when we're done with that data,
    to free it up.
    
    
    (cherry picked from commit 64f3f08702d09f912c2713ec830c91ead242507f)

commit 43fea6cf07
Author: Guy Harris <gharris@sonic.net>
Date:   Sat May 22 19:01:22 2021 -0700

    Plug another leak.
    
    If cf_export_specified_packets() succeeds, and it wrote to a temporary
    file, it leaks the name of the file to which it was writing.  Free that
    after we've renamed that file on top of the target file (safe save).
    
    
    (cherry picked from commit 8ca86b29bfa4780b17e6d15ab1f382f6f79a5065)

commit a049f0876d
Author: Guy Harris <gharris@sonic.net>
Date:   Sat May 22 12:23:50 2021 -0700

    Plug a memory leak.
    
    If the user aborted the process of exporting packets, if we're writing
    to a temporary file, we unlink the file, but we don't free the
    g_mallocated name of the file, so it's leaked.  Free it.
    
    (cherry picked from commit 54508703b0ac4d85df4104f6114a247d68c42b8e)

commit 81eb5ef0a7
Author: Guy Harris <gharris@sonic.net>
Date:   Fri May 21 19:40:00 2021 -0700

    fuzzshark: close a leak.
    
    If init_progfile_dir() fails, it returns a g_mallocated string with an
    error message.  After printing the error message, free the string.
    
    
    (cherry picked from commit c22b857942ea3f123d9fa5c31e04e85c6f3928f5)

commit b4048aaf6f
Author: Guy Harris <gharris@sonic.net>
Date:   Fri May 21 19:14:03 2021 -0700

    protobuf: close another leak.
    
    Close the directory handle we've opened before returning a failure
    indication if pbw_load_proto_file() or load_all_files_in_dir() reports a
    failure.
    
    
    (cherry picked from commit f0abd29e48c1bd724efea606000b86356a764011)

commit ad20d15cc9
Author: Guy Harris <gharris@sonic.net>
Date:   Fri May 21 18:33:56 2021 -0700

    protobuf: close a leak when file loading fails.
    
    Free the path we've constructed before returning a failure indication if
    pbw_load_proto_file() or load_all_files_in_dir() reports a failure.
    
    Also, explicitly compare pbw_load_proto_file()'s return value against 0,
    to make it a little clearer that it's *not* a Boolean, it's a return
    code (with 0 meaning success and different non-zero values meaning
    failure; if it matters *which* failure it is, we should probably have
    otherwise we should just make it a Boolean).
    
    
    (cherry picked from commit f1ffe7d4215ac1cc80d9596e6604b30ddfa59fcf)

commit ba8c18afdc
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun May 16 10:17:56 2021 +0000

    [Automatic update for 2021-05-16]
    
    Update manuf, services enterprise numbers, translations, and other items.

commit 0997425765
Author: Gerald Combs <gerald@wireshark.org>
Date:   Tue May 11 10:56:10 2021 -0700

    Tools: Try to exit more gracefully from fuzzing.
    
    If we catch a signal while we're fuzzing, exit with a successful status
    and clean up after ourselves.
    
    
    (cherry picked from commit dacbfc4ae96fca71935e3f987dc3530f615a665f)

commit a020e1f20d
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun May 9 10:17:56 2021 +0000

    [Automatic update for 2021-05-09]
    
    Update manuf, services enterprise numbers, translations, and other items.

commit 0a8ae10417
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sat May 8 09:31:36 2021 -0700

    GitLab CI: Set our Clang version.

commit fb052ffecd
Author: Gerald Combs <gerald@wireshark.org>
Date:   Fri May 7 17:10:52 2021 -0700

    GitLab CI: Fix our fuzzing resource group.

commit 897b59aba9
Author: Gerald Combs <gerald@wireshark.org>
Date:   Fri May 7 14:05:29 2021 -0700

    GitLab CI: Add fuzzing to the 3.2 branch.
    
    Backport part of d7bdd77a4c, which adds a -t option to
    tools/fuzz-test.sh which lets you specify a maximum fuzz time.
    
    Copy over the current (as of 7c6df3848f) fuzz jobs from the master
    branch.

commit 3b5a9708d8
Author: Gerald Combs <gerald@wireshark.org>
Date:   Fri May 7 12:56:11 2021 -0700

    GitLab CI: Give our jobs proper names.
    
    GitLab's job YAML parser allows spaces in key names and our jobs are
    visible in the web UI, so give them proper names.

commit 98df691665
Author: Gerald Combs <gerald@wireshark.org>
Date:   Fri May 7 11:49:51 2021 -0700

    GitLab CI: Restore the ability to run pipelines from the web UI.
    
    
    (cherry picked from commit bedf0eb21c31b64c0bcfaa00f5632e13eabe8479)

commit b87bdab1fc
Author: Gerald Combs <gerald@wireshark.org>
Date:   Tue May 4 15:56:32 2021 -0700

    GitLab CI: Miscellaneous updates.
    
    Copy over various updates from the master branch including:
    
    - Setting a git clone depth.
    - Running manually in forks.
    - Rule reuse.
    - Using "extends" instead of YAML anchors.

commit b27e288ec6
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun May 2 09:51:59 2021 +0000

    [Automatic update for 2021-05-02]
    
    Update manuf, services enterprise numbers, translations, and other items.

commit 40bd88cdcb
Author: Guy Harris <gharris@sonic.net>
Date:   Thu Apr 29 14:27:49 2021 -0700

    tap_export_pdu: we don't have packet flags, don't claim that we do.
    
    We don't set rec.rec_header.packet_header.pack_flags, so don't set
    WTAP_HAS_PACK_FLAGS in the presence flags.  (Copy-and-pasteo?)
    
    
    (cherry picked from commit faf2e62db8b7cd3720ec472aa303761d6f97eaca)

commit 273663bcfc
Author: Uli Heilmeier <uh@heilmeier.eu>
Date:   Tue Apr 20 22:47:43 2021 +0200

    PTP: Check for enough bytes
    
    Make sure we have enough bytes for Length and Type fields before we read
    from tvb.
    Using existing msg_len for the checks.
    
    Closes: wireshark/wireshark#17355
    
    
    (cherry picked from commit fd14396972733e8e2e1023150f628e3aa7370b18)

commit 9507ed767f
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Apr 25 10:14:35 2021 +0000

    [Automatic update for 2021-04-25]
    
    Update manuf, services enterprise numbers, translations, and other items.

commit de1ac8c761
Author: Gerald Combs <gerald@wireshark.org>
Date:   Wed Apr 21 11:57:01 2021 -0700

    Version: 3.2.13 ‚Üí 3.2.14.
    
    [skip ci]
