commit f8362c96be
Author: Chuck Craft <bubbasnmp@gmail.com>
Date:   Tue Jul 26 15:20:06 2022 -0500

    gtpv2: adjust field size and bitmask for gtpv2.smenb

    Closes #18225

    (cherry picked from commit c4f983141278158770dae804c99929fe3ffe3bd4)

commit 556a98ef8c
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Jul 24 16:35:52 2022 +0000

    [Automatic update for 2022-07-24]

    Update manuf, services enterprise numbers, translations, and other items.

commit 394d7bf0f3
Author: Uli Heilmeier <uh@heilmeier.eu>
Date:   Sat Jul 23 16:16:27 2022 +0200

    ECATMB: Add SDO Information to CANopenType

    Fixes #18220

    (cherry picked from commit 54b4be901511993701c6bcc4da8e625ab2c3c222)

commit 3823723d3e
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Jul 17 16:34:33 2022 +0000

    [Automatic update for 2022-07-17]

    Update manuf, services enterprise numbers, translations, and other items.

commit a1adfa0f80
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Jul 10 16:36:24 2022 +0000

    [Automatic update for 2022-07-10]

    Update manuf, services enterprise numbers, translations, and other items.

commit f1af713959
Author: Guy Harris <gharris@sonic.net>
Date:   Thu Jul 7 02:03:26 2022 -0700

    nhrp: clean up extension parsing.

    For the top-level item for an extension, initially create it with a
    length of "to the end of the packet" and, when we finish dissecting it,
    set the length appropriately.  That way, if the length is too large, we
    don't throw an immediate exception, making it a little clearer what's
    happending.

    When dissecting an authentication extension, construct the text of the
    top-level item as we dissect it, and initially create it with a length
    of "to the end of the packet" and, when we're finished dissecting it,
    set the length appropriately.  That way, we don't throw an exception
    before doing any dissection if the data for the item isn't all there, we
    only throw an exception when we run out of data, and we also don't try
    to add the data unless there is at least one byte of data.

    The latter of those fixes #18181.

    (backported from commit abe8798b78eac21c39d45239ca6674bad7456346)

commit 7ac5339b47
Author: Guy Harris <gharris@sonic.net>
Date:   Thu Jul 7 11:40:48 2022 -0700

    nhrp: fix type of "Vendor ID" field.

    We're fetching it as an 3-octet unsigned integer, so make it an
    FT_UINT24.

    (backported from part of commit 89b7a1328b104e081304ce91a375a4de8ed11156)

    (cherry picked from commit dc8320862b8b37e6e4686c83bfbef34e3bf56575)

commit 20224f1c38
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Jul 3 16:35:20 2022 +0000

    [Automatic update for 2022-07-03]

    Update manuf, services enterprise numbers, translations, and other items.

commit 7b3b2f337d
Author: Guy Harris <gharris@sonic.net>
Date:   Thu Jun 30 23:35:52 2022 -0700

    iec104: dissect the control field as a 4-octet little-endian field.

    Treat all 4 octets of the control field as a single little-endian value
    divided into bitfields.  We already showed *some* subfields as
    bitfields; this means we show *all* of them that way.

    That makes the display more clearly show which bits in those octets
    correspond to which fields.

    It also fixes the dissection of the type field; we have separate
    bitfields for I frames (1-bit bitfield) and S and U frames (2-bit
    bitfield).

    Use proto_tree_add_item_ret_uint() to fetch the values other than the
    frame type value.

    Fixes #18167.

    (backported from commit 0257b41167b05e11ce1c587cdb2f23b1616e56ea)

commit fe2e75b896
Author: John Thacker <johnthacker@gmail.com>
Date:   Mon Jun 27 20:26:08 2022 -0400

    Qt: Make the Resolve Names buttons checkable again

    The checkable property got lost at some point, rendering it impossible
    to make columns resolved.

    (cherry picked from commit 4ed4678859e0a90046f2dc025e0a1641129c3941)

commit 3e7194aa0d
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Jun 26 16:34:39 2022 +0000

    [Automatic update for 2022-06-26]

    Update manuf, services enterprise numbers, translations, and other items.

commit 9f5f947a17
Author: Chuck Craft <bubbasnmp@gmail.com>
Date:   Thu Nov 18 12:21:43 2021 -0600

    Qt: capture with file intervals bug; autostop duration reset

    Closes #16783. No open issue for autostop bug. Link added in
    issue 16783 to Ask site question 15303.

    (cherry picked from commit c560226f3b7d8acd3d7acb4d9d2aac862ffefcc4)

commit df987dc796
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Jun 19 16:37:19 2022 +0000

    [Automatic update for 2022-06-19]

    Update manuf, services enterprise numbers, translations, and other items.

commit 03e1351f71
Author: Pascal Quantin <pascal@wireshark.org>
Date:   Wed Jun 15 19:01:24 2022 +0200

    RTCP: ensure that at least two bytes are captured for heuristic checks

    Fixes #18136

    (cherry picked from commit 1bd24bb95dc215a55fad0056e59a8494faef1493)

commit 3f4ff17753
Author: Gerald Combs <gerald@wireshark.org>
Date:   Wed Jun 15 10:24:07 2022 -0700

    GitLab CI: Fix our documentation globs

    The correct glob pattern for a directory and its subdirectories is
    "**/*". Use that in the change rules for the Documentation job.

    (cherry picked from commit 022ebb106a2890397d3ac9ff9b3db5cc369da99c)

    Conflicts:
            .gitlab-ci.yml

commit efbed9109e
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Jun 12 16:36:41 2022 +0000

    [Automatic update for 2022-06-12]

    Update manuf, services enterprise numbers, translations, and other items.

    enterprises failed.
    services failed.

commit b089088eab
Author: Jakub Jirutka <jakub@jirutka.cz>
Date:   Wed May 18 01:55:53 2022 +0200

    Qt: Fix segfault when some ICU codec is not available

        $ gdb --args wireshark
        (gdb) run
        Starting program: /usr/bin/wireshark
        [New LWP 10363]
        [New LWP 10364]
         ** (wireshark:10356) 13:13:14.137941 [GUI WARNING] -- codecForName: ucnv_open failed ISO-8859-2 U_FILE_ACCESS_ERROR
        (gdb) bt
        Thread 1 "wireshark" received signal SIGSEGV, Segmentation fault.
        0x00005555557b1959 in MainWindow::findTextCodecs (this=0x7fffecdfd390) at wireshark-3.6.5/ui/qt/main_window.cpp:2029
        2029            QString key = codec->name().toUpper();
        (gdb) bt
        #0  0x00005555557b1959 in MainWindow::findTextCodecs (this=0x7fffecdfd390) at wireshark-3.6.5/ui/qt/main_window.cpp:2029
        #1  0x00005555557b4ce3 in MainWindow::MainWindow (this=this@entry=0x7fffecdfd390, parent=parent@entry=0x0) at wireshark-3.6.5/ui/qt/main_window.cpp:362
        #2  0x000055555564f0af in main (argc=<optimized out>, qt_argv=0x7fffffffe748) at wireshark-3.6.5/ui/qt/main.cpp:725

    See https://gitlab.alpinelinux.org/alpine/aports/-/issues/13814 for more
    information.

    (cherry picked from commit 635286ce0dcb94c81e03fc145345675dccf25304)

commit 1a80ef84c4
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun Jun 5 16:37:10 2022 +0000

    [Automatic update for 2022-06-05]

    Update manuf, services enterprise numbers, translations, and other items.

commit 4b8faee159
Author: Dana Sy <dana.hayden.sy@gmail.com>
Date:   Thu May 26 17:50:16 2022 -0700

    Zigbee: Touchlink typo

    Fixed typo for Touchlink command filter name

    (cherry picked from commit eb3c77f306b84750ac754a14cb33a6e7f1b907d2)

commit 5d06d4c512
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun May 29 16:38:30 2022 +0000

    [Automatic update for 2022-05-29]

    Update manuf, services enterprise numbers, translations, and other items.

commit f813c27752
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun May 22 16:38:23 2022 +0000

    [Automatic update for 2022-05-22]

    Update manuf, services enterprise numbers, translations, and other items.

commit b71e29bfae
Author: Jason Cohen <kryojenik2@gmail.com>
Date:   Tue May 17 18:59:25 2022 -0500

    f5ethtrailer: Decode TLE 1.3 trailer info on some versions

    Some versions of BIG-IP create Type 2 Version 0 records with the
    Type 2 Version 1 size.  Allow for the decoding of these records.

    (cherry picked from commit 0cab39a86fce33656eea5911337907a29d252bd9)

commit eb7110a7c7
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun May 15 16:49:39 2022 +0000

    [Automatic update for 2022-05-15]

    Update manuf, services enterprise numbers, translations, and other items.

commit d4ee65cda0
Author: Gerald Combs <gerald@wireshark.org>
Date:   Sun May 8 16:36:34 2022 +0000

    [Automatic update for 2022-05-08]

    Update manuf, services enterprise numbers, translations, and other items.

commit 4ba410708a
Author: Peter Wu <peter@lekensteyn.nl>
Date:   Mon Apr 25 03:00:44 2022 +0200

    TLS: fix RSA decryption with EMS and renegotiation

    The handshake hash is used to derive TLS decryption keys when the
    Extended Master Secret (EMS) extension is in use.
    ssl_calculate_handshake_hash updates this hash only when the master
    secret has not been determined yet.

    During TLS renegotiation, there are two master secrets: one before, and
    one after. Before this fix, the second calculated master secret is
    wrong because the second Client Hello is missing in the handshake hash.
    It was missing because the handshake hash was not being updated since
    the master secret for the first handshake was still present, and the
    decryption state was only reset after that hash update.

    To fix this, make sure to clear the SSL_MASTER_SECRET flag before
    updating the handshake hash when needed. Additionally, clear the
    handshake hash when processing the Client Hello just to make sure that
    any previous state is gone.

    Fixes #18059

    (cherry picked from commit 62100da7f4027aad801d1dea02998028674fb88d)

commit dbd3c057a5
Author: Gerald Combs <gerald@wireshark.org>
Date:   Wed May 4 12:33:46 2022 -0700

    Version: 3.4.14 → 3.4.15

    [skip ci]
